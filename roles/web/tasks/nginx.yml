---
# file: roles/web/tasks/nginx.yml
- name: install openssl prerequisities
  apt:
    name: python3-openssl
    state: latest
- name: create ssl directory
  file:
    path: /etc/nginx/ssl/
    state: directory
- name: generate an openssl private key
  openssl_privatekey:
    path: "/etc/nginx/ssl/{{ server.name }}.pem"
    passphrase: "{{ certificate.passphrase }}"
    cipher: aes256
- name: generate an openssl csr
  openssl_csr:
    path: "/etc/nginx/ssl/{{ server.name }}.csr"
    privatekey_path: "/etc/nginx/ssl/{{ server.name }}.pem"
    privatekey_passphrase: "{{ certificate.passphrase }}"
    common_name: "{{ certificate.common }}"
    state: present
- name: generate an openssl self-signed certificate
  openssl_certificate:
    provider: selfsigned
    csr_path: "/etc/nginx/ssl/{{ server.name }}.csr"
    path: "/etc/nginx/ssl/{{ server.name }}.crt"
    privatekey_path: "/etc/nginx/ssl/{{ server.name }}.pem"
    privatekey_passphrase: "{{ certificate.passphrase }}"
    state: present
- name: save the certificate passphrase to a file for nginx
  copy:
    content: "{{ certificate.passphrase }}"
    dest: "/etc/nginx/ssl/{{ server.name }}.pass"
    mode: 0600
- name: install passenger prerequisites
  apt:
    name: "{{ item }}"
    state: latest
  with_items: ['apt-transport-https', 'ca-certificates', 'dirmngr', 'gnupg']
- name: add passenger pgp key
  apt_key:
    keyserver: hkp://keyserver.ubuntu.com:80
    id: 561F9B9CAC40B2F7
    state: present
- name: add passenger apt repository
  apt_repository:
    repo: "deb https://oss-binaries.phusionpassenger.com/apt/passenger {{ ansible_distribution_release }} main"
    filename: passenger
    update_cache: yes
- name: install nginx and passenger
  apt:
    name: "{{ item }}"
    state: latest
  with_items: ['nginx', 'libnginx-mod-http-passenger']
- name: remove default nginx website
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: restart nginx
- name: enable passenger
  replace:
    path: /etc/nginx/nginx.conf
    regexp: '^(\s+)# include /etc/nginx/passenger.conf;'
    replace: 'include /etc/nginx/passenger.conf;'
  notify: restart nginx
- name: create rails-ldap-app.conf
  template: 
    src: rails-ldap-app.conf
    dest: /etc/nginx/sites-enabled/rails-ldap-app.conf
  notify: restart nginx
- name: make sure nginx is running and enabled on startup
  service:
    name: nginx
    state: started
    enabled: yes
